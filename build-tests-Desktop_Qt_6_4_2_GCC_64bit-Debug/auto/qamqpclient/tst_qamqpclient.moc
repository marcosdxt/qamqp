/****************************************************************************
** Meta object code from reading C++ file 'tst_qamqpclient.cpp'
**
** Created by: The Qt Meta Object Compiler version 68 (Qt 6.4.2)
**
** WARNING! All changes made in this file will be lost!
*****************************************************************************/

#include <memory>
#include <QtCore/qmetatype.h>
#if !defined(Q_MOC_OUTPUT_REVISION)
#error "The header file 'tst_qamqpclient.cpp' doesn't include <QObject>."
#elif Q_MOC_OUTPUT_REVISION != 68
#error "This file was generated using the moc from 6.4.2. It"
#error "cannot be used with the include files from this version of Qt."
#error "(The moc has changed too much.)"
#endif

#ifndef Q_CONSTINIT
#define Q_CONSTINIT
#endif

QT_BEGIN_MOC_NAMESPACE
QT_WARNING_PUSH
QT_WARNING_DISABLE_DEPRECATED
namespace {
struct qt_meta_stringdata_tst_QAMQPClient_t {
    uint offsetsAndSizes[32];
    char stringdata0[16];
    char stringdata1[8];
    char stringdata2[1];
    char stringdata3[18];
    char stringdata4[19];
    char stringdata5[18];
    char stringdata6[31];
    char stringdata7[5];
    char stringdata8[12];
    char stringdata9[17];
    char stringdata10[12];
    char stringdata11[8];
    char stringdata12[14];
    char stringdata13[14];
    char stringdata14[21];
    char stringdata15[11];
};
#define QT_MOC_LITERAL(ofs, len) \
    uint(sizeof(qt_meta_stringdata_tst_QAMQPClient_t::offsetsAndSizes) + ofs), len 
Q_CONSTINIT static const qt_meta_stringdata_tst_QAMQPClient_t qt_meta_stringdata_tst_QAMQPClient = {
    {
        QT_MOC_LITERAL(0, 15),  // "tst_QAMQPClient"
        QT_MOC_LITERAL(16, 7),  // "connect"
        QT_MOC_LITERAL(24, 0),  // ""
        QT_MOC_LITERAL(25, 17),  // "connectProperties"
        QT_MOC_LITERAL(43, 18),  // "connectHostAddress"
        QT_MOC_LITERAL(62, 17),  // "connectDisconnect"
        QT_MOC_LITERAL(80, 30),  // "invalidAuthenticationMechanism"
        QT_MOC_LITERAL(111, 4),  // "tune"
        QT_MOC_LITERAL(116, 11),  // "socketError"
        QT_MOC_LITERAL(128, 16),  // "validateUri_data"
        QT_MOC_LITERAL(145, 11),  // "validateUri"
        QT_MOC_LITERAL(157, 7),  // "issue38"
        QT_MOC_LITERAL(165, 13),  // "issue38_take2"
        QT_MOC_LITERAL(179, 13),  // "autoReconnect"
        QT_MOC_LITERAL(193, 20),  // "autoReconnectTimeout"
        QT_MOC_LITERAL(214, 10)   // "sslConnect"
    },
    "tst_QAMQPClient",
    "connect",
    "",
    "connectProperties",
    "connectHostAddress",
    "connectDisconnect",
    "invalidAuthenticationMechanism",
    "tune",
    "socketError",
    "validateUri_data",
    "validateUri",
    "issue38",
    "issue38_take2",
    "autoReconnect",
    "autoReconnectTimeout",
    "sslConnect"
};
#undef QT_MOC_LITERAL
} // unnamed namespace

Q_CONSTINIT static const uint qt_meta_data_tst_QAMQPClient[] = {

 // content:
      10,       // revision
       0,       // classname
       0,    0, // classinfo
      14,   14, // methods
       0,    0, // properties
       0,    0, // enums/sets
       0,    0, // constructors
       0,       // flags
       0,       // signalCount

 // slots: name, argc, parameters, tag, flags, initial metatype offsets
       1,    0,   98,    2, 0x08,    1 /* Private */,
       3,    0,   99,    2, 0x08,    2 /* Private */,
       4,    0,  100,    2, 0x08,    3 /* Private */,
       5,    0,  101,    2, 0x08,    4 /* Private */,
       6,    0,  102,    2, 0x08,    5 /* Private */,
       7,    0,  103,    2, 0x08,    6 /* Private */,
       8,    0,  104,    2, 0x08,    7 /* Private */,
       9,    0,  105,    2, 0x08,    8 /* Private */,
      10,    0,  106,    2, 0x08,    9 /* Private */,
      11,    0,  107,    2, 0x08,   10 /* Private */,
      12,    0,  108,    2, 0x08,   11 /* Private */,
      13,    0,  109,    2, 0x0a,   12 /* Public */,
      14,    0,  110,    2, 0x0a,   13 /* Public */,
      15,    0,  111,    2, 0x0a,   14 /* Public */,

 // slots: parameters
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,
    QMetaType::Void,

       0        // eod
};

Q_CONSTINIT const QMetaObject tst_QAMQPClient::staticMetaObject = { {
    QMetaObject::SuperData::link<TestCase::staticMetaObject>(),
    qt_meta_stringdata_tst_QAMQPClient.offsetsAndSizes,
    qt_meta_data_tst_QAMQPClient,
    qt_static_metacall,
    nullptr,
    qt_incomplete_metaTypeArray<qt_meta_stringdata_tst_QAMQPClient_t,
        // Q_OBJECT / Q_GADGET
        QtPrivate::TypeAndForceComplete<tst_QAMQPClient, std::true_type>,
        // method 'connect'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'connectProperties'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'connectHostAddress'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'connectDisconnect'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'invalidAuthenticationMechanism'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'tune'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'socketError'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'validateUri_data'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'validateUri'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'issue38'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'issue38_take2'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'autoReconnect'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'autoReconnectTimeout'
        QtPrivate::TypeAndForceComplete<void, std::false_type>,
        // method 'sslConnect'
        QtPrivate::TypeAndForceComplete<void, std::false_type>
    >,
    nullptr
} };

void tst_QAMQPClient::qt_static_metacall(QObject *_o, QMetaObject::Call _c, int _id, void **_a)
{
    if (_c == QMetaObject::InvokeMetaMethod) {
        auto *_t = static_cast<tst_QAMQPClient *>(_o);
        (void)_t;
        switch (_id) {
        case 0: _t->connect(); break;
        case 1: _t->connectProperties(); break;
        case 2: _t->connectHostAddress(); break;
        case 3: _t->connectDisconnect(); break;
        case 4: _t->invalidAuthenticationMechanism(); break;
        case 5: _t->tune(); break;
        case 6: _t->socketError(); break;
        case 7: _t->validateUri_data(); break;
        case 8: _t->validateUri(); break;
        case 9: _t->issue38(); break;
        case 10: _t->issue38_take2(); break;
        case 11: _t->autoReconnect(); break;
        case 12: _t->autoReconnectTimeout(); break;
        case 13: _t->sslConnect(); break;
        default: ;
        }
    }
    (void)_a;
}

const QMetaObject *tst_QAMQPClient::metaObject() const
{
    return QObject::d_ptr->metaObject ? QObject::d_ptr->dynamicMetaObject() : &staticMetaObject;
}

void *tst_QAMQPClient::qt_metacast(const char *_clname)
{
    if (!_clname) return nullptr;
    if (!strcmp(_clname, qt_meta_stringdata_tst_QAMQPClient.stringdata0))
        return static_cast<void*>(this);
    return TestCase::qt_metacast(_clname);
}

int tst_QAMQPClient::qt_metacall(QMetaObject::Call _c, int _id, void **_a)
{
    _id = TestCase::qt_metacall(_c, _id, _a);
    if (_id < 0)
        return _id;
    if (_c == QMetaObject::InvokeMetaMethod) {
        if (_id < 14)
            qt_static_metacall(this, _c, _id, _a);
        _id -= 14;
    } else if (_c == QMetaObject::RegisterMethodArgumentMetaType) {
        if (_id < 14)
            *reinterpret_cast<QMetaType *>(_a[0]) = QMetaType();
        _id -= 14;
    }
    return _id;
}
QT_WARNING_POP
QT_END_MOC_NAMESPACE
